# This file provides overrides for DEVELOPMENT containers. It is automatically loaded by 'docker compose up'.
# - It REPLACES 'image' directives with 'build' directives for local development.
# - It mounts local source code for live-reloading.
# - It adjusts commands and environment for a better dev experience.

services:
  web-api:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/web_api/Dockerfile
      target: dev
    volumes:
      - ./libs/:/src/libs/
      - ./projects/web_api/web_api:/src/projects/web_api/web_api
      - /src/projects/web_api/.venv
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}

  noseyparker-scanner:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/noseyparker_scanner/Dockerfile
      target: dev
    environment:
      - RUST_LOG=debug

  dotnet-service:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/dotnet_service/Dockerfile
      target: dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  file-enrichment:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/file_enrichment/Dockerfile
      target: dev
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    volumes:
      - ./libs/:/src/libs/
      - ./projects/file_enrichment/file_enrichment:/src/projects/file_enrichment/file_enrichment
      - /src/projects/file_enrichment/.venv
      - ./libs/file_enrichment_modules/yara_rules/dev/:/yara_rules/:ro

  frontend:
    image: !reset null
    build:
      context: ./projects/frontend/
      dockerfile: Dockerfile
      target: dev
    command: >
      sh -c "
        if [ -f /version.json ]; then cp /version.json /app/public/version.json; fi &&
        SECRET=\"$$HASURA_ADMIN_SECRET\" &&
        echo \"window.ENV = { HASURA_ADMIN_SECRET: '$$SECRET' };\" > /app/public/env.js &&
        cd /app &&
        npm run dev
      "
    volumes:
      - ./projects/frontend/index.html:/app/index.html:ro
      - ./projects/frontend/package.json:/app/package.json:ro
      - ./projects/frontend/public:/app/public
      - ./projects/frontend/src:/app/src:ro
      - ./projects/frontend/vite.config.js:/app/vite.config.js:ro
      - ./version.json:/version.json:ro
    labels:
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  jupyter:
    image: !reset null
    # To develop jupyter itself, you would add a `build` block here
    # Since it's already using `build` in the base, this override isn't strictly
    # necessary unless you change the target or add more dev volumes.
    build:
      context: ./projects/jupyter/
      dockerfile: Dockerfile

  alerting:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/alerting/Dockerfile
      target: dev
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}

  agents:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/agents/Dockerfile
      target: dev
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    volumes:
      - ./libs/:/src/libs/
      - ./projects/agents/agents:/src/projects/agents/agents
      - /src/projects/agents/.venv

  housekeeping:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/housekeeping/Dockerfile
      target: dev
    volumes:
      - ./libs/:/src/libs/
      - ./projects/housekeeping/housekeeping:/src/projects/housekeeping/housekeeping
      - /src/projects/housekeeping/.venv
    environment:
      - CLEANUP_SCHEDULE=*/3 * * * * # Test every 3 minutes
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}

  document-conversion:
    image: !reset null
    build:
      context: .
      dockerfile: ./projects/document_conversion/Dockerfile
      target: dev
      args:
        - TIKA_OCR_LANGUAGES=${TIKA_OCR_LANGUAGES}
    volumes:
      - ./libs/:/src/libs/
      - ./projects/document_conversion/document_conversion:/src/projects/document_conversion/document_conversion
      - /src/projects/document_conversion/.venv
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}

  postgres:
    # expose the port locally
    ports:
      - "5432:5432"